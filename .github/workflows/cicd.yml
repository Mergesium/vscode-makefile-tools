# Thanks HaaLeo:
# https://github.com/HaaLeo/vscode-timing/blob/master/.github/workflows/cicd.yml#L1

name: Build and Deploy

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - master
  release:
    types:
      - published

jobs:
  build-lint-test:
    name: Node ${{ matrix.node }} on ${{ matrix.config.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.config.os }}
    timeout-minutes: 5
    strategy:
      fail-fast: true
      matrix:
        config:
          - { os: ubuntu-20.04, name: linux }
          - { os: macos-latest, name: darwin }
          # - { os: windows-latest, name: win32 }
        arch:
          - x64
          - arm64
        node:
          - 16
    outputs:
      vsixPath: ${{ steps.packageExtension.outputs.vsixPath }}
      target: ${{ matrix.config.name }}-${{ matrix.arch }}
    steps:
      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: autopoint
          version: 1.0      
        if: runner.os == 'Linux'
      - name: Update homebrew
        run: |
          brew install automake
        if: runner.os == 'macOS'
      - name: Update msys
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            autoconf automake libtool gettext
        if: runner.os == 'Windows'
      - name: Setup GIT for Windows
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
        if: runner.os == 'Windows'
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install Node ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - name: Install Dependencies
        run: yarn install
      # - name: Run Linter
      #   run: npm run lint
      - name: Generate Translations
        run: yarn run translations-generate
      - name: Bootstrap external dependencies
        run: yarn bootstrap
      - name: Configure externals
        run: yarn configure
      - name: Configure externals
        run: mkdir -p build/make && cd build/make && [ -f config.status ] || ../../vendor/gnumake/configure --disable-dependency-tracking --with-guile=no --disable-job-server --disable-load 'INSTALL_PROGRAM=install -cs' 'CFLAGS=-g0 -O2' LIBS=-lrt --disable-nls --prefix=$PWD/../..
        if: runner.os == 'Linux'
      - name: Build Extension
        run: yarn compile
      - name: Check make symbols
        run: objdump -T build/make/make
      # - name: Run Unit Tests on Windows or macOS
      #   run: npm run test
      #   if: runner.os != 'Linux'
      # - name: Run Unit Tests on Linux
      #   run: xvfb-run -a npm test
      #   if: runner.os == 'Linux'
      # - name: Upload Coverage Report
      #   uses: coverallsapp/github-action@1.1.3
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     parallel: true
      #     flag-name: Test on ${{ matrix.config.os }}
      - name: Package Extension
        id: packageExtension
        uses: HaaLeo/publish-vscode-extension@v1
        with:
          pat: stub
          dryRun: true
          target: ${{ matrix.config.name }}-${{ matrix.arch }}
      - name: Upload Extension Package as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.config.name }}-${{ matrix.arch }}
          path: ${{ steps.packageExtension.outputs.vsixPath }}

  # coverage:
  #   name: Code Coverage
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 10
  #   needs: build-lint-test
  #   steps:
  #     - name: Let Coveralls know that all tests have finished
  #       uses: coverallsapp/github-action@1.1.3
  #       with:
  #         github-token: ${{ secrets.GITHUB_TOKEN }}
  #         parallel-finished: true

  publish:
    name: Publish Github Action
    needs:
      - build-lint-test
      # - coverage
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      # - name: Checkout Source
      #   uses: actions/checkout@v4
      # - name: Install Node v16
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: 16
      # - name: Install Dependencies
      #   run: npm ci
      - name: Download Build Artifact
        id: download
        uses: actions/download-artifact@v3
      - name: 'Echo download path'
        run:
          echo downloaded... ${{steps.download.outputs.download-path}}
          echo expected... ${{ needs.build-lint-test.outputs.target }}/${{ needs.build-lint-test.outputs.vsixPath }}
      - name: GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: false
          body: |
            # Summary
            See [changelog](https://github.com/...path.to.changelog#changelog)
          name: ${{ github.ref_name }}
          fail_on_unmatched_files: true
          files: ${{ needs.build-lint-test.outputs.target }}/${{ needs.build-lint-test.outputs.vsixPath }}
      - name: Publish to Visual Studio Marketplace
        uses: HaaLeo/publish-vscode-extension@v1
        with:
          pat: ${{ secrets.VS_MARKETPLACE_TOKEN }}
          extensionFile: ${{ needs.build-lint-test.outputs.target }}/${{ needs.build-lint-test.outputs.vsixPath }}
          registryUrl: https://marketplace.visualstudio.com
          target: ${{ needs.build-lint-test.outputs.target }}
      #- name: Publish to Open VSX Registry
      #  uses: HaaLeo/publish-vscode-extension@v1
      #  with:
      #    pat: ${{ secrets.OPEN_VSX_TOKEN }}
      #    extensionFile: ${{ needs.build-lint-test.outputs.vsixPath }}
      #    target: ${{ needs.build-lint-test.outputs.target }}
